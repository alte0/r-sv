{"version":3,"sources":["components/success/success.js","helpers/helpers.js","data/users.js","components/forms/sing-up.js","components/title/title.js","pages/sing-up.js","components/forms/sing-in.js","pages/sing-in.js","App.js","serviceWorker.js","index.js"],"names":["Success","props","text","className","width","height","viewBox","fill","xmlns","d","stroke","orig-stroke","strokeWidth","orig-stroke-width","animation-delay-opacity","animation-delay-stroke","animation-delay-fill","animation-duration-opacity","animation-duration-stroke","animation-duration-fill","validateRegex","regex","value","test","pswd","a","Crypt","newPswd","hashPwd","Compare","users","FormSingUp","validateForm","state","valueName","valueLogin","valueEmail","valuePswd","isChecked","isValidPhone","isValidPswd","Boolean","handleChangeName","evt","target","setState","isValidForm","handleChangeLogin","trim","handleChangeEmail","isValidEmail","handleChangeTel","valueClearSpace","split","join","phoneRegex","RegExp","valueTel","handleChangePswd","handleClickToggle","isTypeInputText","handleChangeCheckbox","handleSubmit","preventDefault","history","formData","FormData","get","tel","cryptPswd","then","hashPswd","user","name","login","email","showSuccess","storage","push","recordUser","setTimeout","catch","e","console","log","initialState","Fragment","onSubmit","this","type","id","required","onChange","htmlFor","pattern","mask","maskPlaceholder","onClick","checked","disabled","to","Component","withRouter","Title","title","PageSingUp","FormSingIn","findUser","index","findIndex","item","toLowerCase","searchUser","cryptComparePswd","isValid","PageSingIn","App","basename","exact","path","match","CSSTransition","in","timeout","classNames","unmountOnExit","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f885ae0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './success.scss';\r\n\r\nexport const Success = (props) => {\r\n    const { text } = props;\r\n    return (\r\n        <div className={\"success\"}>\r\n            <svg\r\n                className={\"success__svg\"}\r\n                width={212}\r\n                height={212}\r\n                viewBox=\"0 0 212 212\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    className={\"success__path\"}\r\n                    d=\"M106 13.25C54.7805 13.25 13.25 54.7805 13.25 106C13.25 157.22 54.7805 198.75 106 198.75C157.22 198.75 198.75 157.22 198.75 106C198.75 54.7805 157.22 13.25 106 13.25ZM146.061 75.7113L102.46 136.164C101.85 137.015 101.047 137.708 100.116 138.186C99.1856 138.664 98.1543 138.914 97.108 138.914C96.0617 138.914 95.0304 138.664 94.0997 138.186C93.169 137.708 92.3656 137.015 91.7563 136.164L65.9395 100.389C65.1527 99.2922 65.9395 97.7602 67.2852 97.7602H76.9949C79.1066 97.7602 81.1148 98.7746 82.357 100.514L97.0977 120.968L129.643 75.8355C130.885 74.1172 132.873 73.082 135.005 73.082H144.715C146.061 73.082 146.847 74.6141 146.061 75.7113Z\"\r\n                    fill=\"black\"\r\n                    stroke=\"black\"\r\n                    orig-stroke=\"black\"\r\n                    strokeWidth={1}\r\n                    orig-stroke-width={1}\r\n                    animation-delay-opacity={0}\r\n                    animation-delay-stroke={500}\r\n                    animation-delay-fill={1500}\r\n                    animation-duration-opacity={500}\r\n                    animation-duration-stroke={1000}\r\n                    animation-duration-fill={500}\r\n                />\r\n            </svg>\r\n            <p className={\"success__text\"}>Вы {text}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { Crypt, Compare } from 'password-crypt';\r\n/**\r\n * Соль для пароля\r\n * @type {string}\r\n */\r\nexport const salt = \"grDT@\";\r\n/**\r\n * Валидация значения в зависимости от Regex\r\n * @param { RegExp } regex\r\n * @param { String } value\r\n * @returns {Boolean}\r\n */\r\nexport const validateRegex = (regex, value) => {\r\n    return regex.test(value);\r\n}\r\n/**\r\n * Хэширование пароля\r\n * @param pswd\r\n * @returns {function(*=): *}\r\n */\r\nexport async function cryptPswd (pswd) {\r\n    return await Crypt(salt, pswd);\r\n}\r\n/**\r\n * Сравнение хэшов паролей\r\n * @param { String } newPswd\r\n * @param { String } hashPwd\r\n * @returns {function(*): *}\r\n */\r\nexport async function cryptComparePswd (newPswd, hashPwd) {\r\n    return await Compare(salt, newPswd, hashPwd);\r\n}\r\n/**\r\n * Запись данных пользователя в файл\r\n * @param { Array } storage\r\n * @param { Object } user\r\n */\r\nexport const recordUser = (storage, user) => {\r\n    storage.push(user);\r\n}\r\n/**\r\n * Поиск пользователя в массиве и возврат его.\r\n * @param { Array } storage\r\n * @param { String } login\r\n * @returns { Object | Null} - user\r\n */\r\nexport const searchUser = (storage, login) => {\r\n    const index = storage.findIndex((item) => (\r\n        item.email.toLowerCase() === login.toLowerCase()) ||\r\n        (item.tel.toLowerCase() === login.toLowerCase())\r\n    );\r\n\r\n    return storage[index] || null;\r\n}\r\n","export const users = [];\r\n","import React, { Component } from 'react';\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport InpuMask from 'react-input-mask';\r\nimport './form.scss';\r\nimport {Success} from \"../success/success\";\r\nimport { validateRegex, cryptPswd, recordUser } from \"../../helpers/helpers\";\r\nimport { users } from '../../data/users';\r\n\r\nclass FormSingUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            valueName: '',\r\n            valueLogin: '',\r\n            valueEmail: '',\r\n            valueTel: '',\r\n            valuePswd: '',\r\n            isValidForm: false,\r\n            isTypeInputText: false,\r\n            isChecked: false,\r\n            isValidPhone: false,\r\n            isValidPswd: false,\r\n            isValidEmail: false,\r\n            showSuccess: false\r\n        }\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    validateForm = (state) => {\r\n        const { valueName, valueLogin, valueEmail, valuePswd, isChecked, isValidPhone, isValidPswd } = state;\r\n\r\n        return Boolean(valueName && valueLogin && valueEmail && valuePswd && isChecked && isValidPhone && isValidPswd);\r\n    };\r\n\r\n    handleChangeName = (evt) => {\r\n        const value = evt.target.value;\r\n        this.setState((state) => ({\r\n            valueName: value,\r\n            isValidForm: this.validateForm({ ...state, valueName: value })\r\n        }));\r\n    }\r\n\r\n    handleChangeLogin = (evt) => {\r\n        const value = evt.target.value.trim();\r\n        this.setState((state) => ({\r\n            valueLogin: value,\r\n            isValidForm: this.validateForm({ ...state, valueLogin: value })\r\n        }));\r\n    }\r\n\r\n    handleChangeEmail = (evt) => {\r\n        const value = evt.target.value.trim();\r\n        const emailRegex = /.+@.+\\..+/;\r\n        const isValidEmail = validateRegex(emailRegex, value);\r\n\r\n        this.setState((state) => ({\r\n            valueEmail: value,\r\n            isValidEmail: isValidEmail,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                valueEmail: value,\r\n                isValidEmail: isValidEmail\r\n                })\r\n        }));\r\n    }\r\n\r\n    handleChangeTel = (evt) => {\r\n        const value = evt.target.value;\r\n        const valueClearSpace = value.split(' ').join('').split('_').join('');\r\n        const phoneRegex = new RegExp('^(([+]{0,1}\\\\d{2})|\\\\d?)[\\\\s-]?[0-9]{2}[\\\\s-]?[0-9]{3}[\\\\s-]?[0-9]{4}$');\r\n        const isValidPhone = validateRegex(phoneRegex, valueClearSpace);\r\n\r\n        this.setState((state) => ({\r\n            valueTel: valueClearSpace,\r\n            isValidPhone: isValidPhone,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                valueTel: valueClearSpace,\r\n                isValidPhone: isValidPhone\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleChangePswd = (evt) =>{\r\n        const value = evt.target.value.trim();\r\n        const pswdRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})/;\r\n        const isValidPswd = validateRegex(pswdRegex, value);\r\n\r\n        this.setState((state) => ({\r\n            valuePswd: value,\r\n            isValidPswd: isValidPswd,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                valuePswd: value,\r\n                isValidPswd: isValidPswd\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleClickToggle = () =>{\r\n        this.setState((state) => ({isTypeInputText: !state.isTypeInputText}));\r\n    }\r\n\r\n    handleChangeCheckbox = () =>{\r\n        this.setState((state) => ({\r\n            isChecked: !state.isChecked,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                isChecked: !state.isChecked\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const { history } = this.props;\r\n        const formData = new FormData(evt.target);\r\n        const pswd = formData.get('pswd');\r\n        const tel = this.state.valueTel;\r\n\r\n        cryptPswd(pswd)\r\n            .then((hashPswd)=> {\r\n                const user = {\r\n                    name: formData.get('name'),\r\n                    login: formData.get('login'),\r\n                    email: formData.get('email'),\r\n                    tel,\r\n                    pswd: hashPswd,\r\n                }\r\n\r\n                this.setState({showSuccess: true});\r\n\r\n                recordUser(users, user);\r\n                setTimeout(() => {\r\n                    history.push(\"/\")\r\n                }, 3500)\r\n            })\r\n            .catch((e) => {\r\n                console.log('e')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className={\"form\"}\r\n                      onSubmit={this.handleSubmit}>\r\n                    <div className={\"form__field\"}>\r\n                        <input className={\"form__input\"} type={\"text\"} name={\"name\"} id={\"name\"} required\r\n                               value={this.state.valueName}\r\n                               onChange={this.handleChangeName}/>\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"name\"}>Имя</label>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <input className={\"form__input\"} type={\"text\"} name={\"login\"} id={\"login\"} required\r\n                               value={this.state.valueLogin}\r\n                               onChange={this.handleChangeLogin}/>\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"login\"}>Никнейм</label>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <input className={\"form__input\"} type={\"email\"} name={\"email\"} id={\"email\"} required\r\n                               value={this.state.valueEmail}\r\n                               onChange={this.handleChangeEmail}\r\n                                pattern={\".+@.+\\\\..+\"}\r\n                        />\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"email\"}>Email</label>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <InpuMask\r\n                            className={\"form__input\"}\r\n                            mask=\"+7\\ 999 999 99 99\"\r\n                            maskPlaceholder=\"_\"\r\n                            name={\"tel2\"}\r\n                            id={\"tel2\"}\r\n                            value={this.state.valueTel}\r\n                            onChange={this.handleChangeTel}\r\n                            required/>\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"tel\"}>Телефон</label>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <input className={\"form__input\"} name={\"pswd\"} id={\"pswd\"} required\r\n                               type={this.state.isTypeInputText ? \"text\" : \"password\" }\r\n                               value={this.state.valuePswd}\r\n                               onChange={this.handleChangePswd}\r\n                               pattern={\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})\"}\r\n                            />\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"pswd\"}>Пароль</label>\r\n                        <button className={\"form__switch-input-type\"} type={\"button\"}\r\n                                onClick={this.handleClickToggle}>\r\n                            <svg className={this.state.isTypeInputText ? \"eye eye--on\" : \"eye\" } width={16} height={12} viewBox=\"0 0 19 14\" fill=\"none\">\r\n                                <path\r\n                                    d=\"M12.113 7A2.572 2.572 0 116.97 7a2.572 2.572 0 015.143 0v0z\"\r\n                                />\r\n                                <path\r\n                                    d=\"M1.363 7a8.575 8.575 0 0116.358 0A8.575 8.575 0 011.363 7v0z\"\r\n                                />\r\n                            </svg>\r\n                            <span className={\"visually-hidden\"}>Посмотреть или скрыть пароль</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className={\"form__field form__field--agreement\"}>\r\n                        <input className={\"form__input form__input--agreement visually-hidden\"} type={\"checkbox\"} name={\"agreement\"} id={\"agreement\"} required\r\n                               checked={this.state.isChecked}\r\n                               onChange={this.handleChangeCheckbox}/>\r\n                        <label className={\"form__label form__label--agreement\"} htmlFor={\"agreement\"}>Я даю свое согласие на обработку персональных данных</label>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <button className={\"btn form__btn\"} type={\"submit\"} disabled={!this.state.isValidForm}>Зарегистрироваться </button>\r\n                    </div>\r\n                    <div className={\"form__field form__field--text-center\"}>\r\n                        <span className={\"form__question\"}>Есть аккаунт?</span>\r\n                        <Link className={\"form__link\"} to=\"/\">Войти</Link>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    this.state.showSuccess ? <Success text={\"зарегистрированы\"}/> : \"\"\r\n                }\r\n            </React.Fragment>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withRouter(FormSingUp);\r\n","import React from \"react\";\r\nimport './title.scss';\r\n\r\nexport const Title = (props) => {\r\n    return (\r\n        <>\r\n            <h1 className={\"title\"}>{props.title}</h1>\r\n            <p className={\"title__desc\"}>Введите свои данные</p>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport FormSingUp from '../components/forms/sing-up';\r\nimport  { Title } from '../components/title/title';\r\n\r\nexport const PageSingUp = () => {\r\n    return (\r\n        <>\r\n            <Title title={\"Регистрация\"}/>\r\n            <FormSingUp/>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link } from \"react-router-dom\";\r\nimport './form.scss';\r\nimport { Success } from \"../success/success\";\r\nimport { validateRegex, searchUser, cryptComparePswd } from \"../../helpers/helpers\";\r\nimport { users } from '../../data/users'\r\n\r\nclass FormSingIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            valueLogin: '',\r\n            valuePswd: '',\r\n            isValidForm: false,\r\n            isTypeInputText: false,\r\n            isValidPswd: false,\r\n            showSuccess: false\r\n        }\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    validateForm = (state) => {\r\n        const { valueLogin, valuePswd, isValidPswd } = state;\r\n\r\n        return Boolean(valueLogin && valuePswd &&  isValidPswd);\r\n    };\r\n\r\n    handleChangeLogin = (evt) => {\r\n        const value = evt.target.value.trim();\r\n        this.setState((state) => ({\r\n            valueLogin: value,\r\n            isValidForm: this.validateForm({ ...state, valueLogin: value })\r\n        }));\r\n    }\r\n\r\n    handleChangePswd = (evt) =>{\r\n        const value = evt.target.value.trim();\r\n        const pswdRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})/;\r\n        const isValidPswd = validateRegex(pswdRegex, value);\r\n\r\n        this.setState((state) => ({\r\n            valuePswd: value,\r\n            isValidPswd: isValidPswd,\r\n            isValidForm: this.validateForm({\r\n                ...state,\r\n                valuePswd: value,\r\n                isValidPswd: isValidPswd\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleClickToggle = () =>{\r\n        this.setState((state) => ({isTypeInputText: !state.isTypeInputText}));\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const formData = new FormData(evt.target);\r\n        const findUser = searchUser(users, formData.get('login'));\r\n\r\n        if (findUser) {\r\n            cryptComparePswd(formData.get('pswd'), findUser['pswd'])\r\n                .then((isValid) => {\r\n                    if (isValid) {\r\n                        this.setState({showSuccess: true});\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className={\"form\"}\r\n                      onSubmit={this.handleSubmit}>\r\n                    <div className={\"form__field\"}>\r\n                        <input className={\"form__input\"} type={\"text\"} name={\"login\"} id={\"login\"} required\r\n                               value={this.state.valueLogin}\r\n                               onChange={this.handleChangeLogin}/>\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"login\"}>Email или номер телефона</label>\r\n                    </div>\r\n                    <div className={\"form__field form__field--mb40\"}>\r\n                        <input className={\"form__input\"}  name={\"pswd\"} id={\"pswd\"} required\r\n                               type={this.state.isTypeInputText ? \"text\" : \"password\" }\r\n                               value={this.state.valuePswd}\r\n                               onChange={this.handleChangePswd}\r\n                               pattern={\"((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})\"}\r\n                        />\r\n                        <label className={\"form__label form__label--absolute\"} htmlFor={\"pswd\"}>Пароль</label>\r\n                        <button className={\"form__switch-input-type\"} type={\"button\"}\r\n                                onClick={this.handleClickToggle}>\r\n                            <svg className={this.state.isTypeInputText ? \"eye eye--on\" : \"eye\" } width={16} height={12} viewBox=\"0 0 19 14\" fill=\"none\">\r\n                                <path\r\n                                    d=\"M12.113 7A2.572 2.572 0 116.97 7a2.572 2.572 0 015.143 0v0z\"\r\n                                />\r\n                                <path\r\n                                    d=\"M1.363 7a8.575 8.575 0 0116.358 0A8.575 8.575 0 011.363 7v0z\"\r\n                                />\r\n                            </svg>\r\n                            <span className={\"visually-hidden\"}>Посмотреть или скрыть пароль</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className={\"form__field\"}>\r\n                        <button className={\"btn form__btn\"} type={\"submit\"} disabled={!this.state.isValidForm}>Войти </button>\r\n                    </div>\r\n                    <div className={\"form__field form__field--text-center\"}>\r\n                        <span className={\"form__question\"}>Нет аккаунта?</span>\r\n                        <Link className={\"form__link\"} to=\"/sing-up\">Зарегистрироваться</Link>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    this.state.showSuccess ? <Success text={\"авторизированны\"}/> : \"\"\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormSingIn;\r\n","import React from \"react\";\r\nimport FormSingIn from '../components/forms/sing-in';\r\nimport  { Title } from '../components/title/title';\r\n\r\nexport const PageSingIn = () => {\r\n    return (\r\n        <>\r\n            <Title title={\"Вход\"}/>\r\n            <FormSingIn/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CSSTransition } from 'react-transition-group';\nimport { PageSingUp } from './pages/sing-up';\nimport { PageSingIn } from './pages/sing-in';\n\nimport \"normalize.css\";\nimport './App.scss';\n\nconst App = () => {\nreturn (\n    <div className={\"app-container\"}>\n      <Router basename=\"/r-sv/\" >\n          <Route\n              exact\n              path=\"/\">\n            {({ match }) => (\n                <CSSTransition\n                    in={match != null}\n                    timeout={300}\n                    classNames=\"page\"\n                    unmountOnExit\n                >\n                  <div className=\"page\">\n                    <PageSingIn/>\n                  </div>\n                </CSSTransition>\n            )}\n          </Route>\n          <Route\n              path=\"/sing-up\">\n              {({ match }) => (\n                  <CSSTransition\n                      in={match != null}\n                      timeout={300}\n                      classNames=\"page\"\n                      unmountOnExit\n                  >\n                    <div className=\"page\">\n                      <PageSingUp/>\n                    </div>\n                  </CSSTransition>\n              )}\n          </Route>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/fonts.scss';\nimport './scss/visually-hidden.scss';\nimport './index.scss';\nimport './scss/btn.scss';\nimport './scss/eye.scss';\nimport './scss/page.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}